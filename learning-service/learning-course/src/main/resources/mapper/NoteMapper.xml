<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.course.dao.NoteDao">

    <resultMap type="com.learning.course.entity.Note" id="NoteMap">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="author" javaType="com.learning.course.entity.User">
            <id property="id" column="uid"/>
            <result property="username" column="username"/>
            <result property="fullName" column="full_name"/>
            <result property="profilePicture" column="profile_picture"/>
        </association>
    </resultMap>

    <!--通过ID查询单个笔记-->
    <select id="selectById" resultMap="NoteMap">
        select n.id,
               n.content,
               n.user_name,
               n.create_time,
               n.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from note n
                 join user u on u.username = n.user_name
        where n.id = #{id}
    </select>

    <!--查询所有笔记-->
    <select id="list" resultMap="NoteMap">
        select n.id,
               n.content,
               n.user_name,
               n.create_time,
               n.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from note n
                 join user u on u.username = n.user_name
    </select>

    <!--通过课程ID查询所有笔记-->
    <select id="listByCourseId" resultMap="NoteMap">
        select n.id,
               n.content,
               n.user_name,
               n.create_time,
               n.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from note n
                 join user u on u.username = n.user_name
        where n.course_id = #{courseId}
    </select>

    <!--通过用户名查询所有笔记-->
    <select id="listByUsername" resultMap="NoteMap">
        select n.id,
               n.content,
               n.user_name,
               n.create_time,
               n.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from note n
                 join user u on u.username = n.user_name
        where n.user_name = #{username}
    </select>

    <!--通过课程ID和用户名查询所有笔记-->
    <select id="listByCourseIdAndUsername" resultMap="NoteMap">
        select n.id,
               n.content,
               n.user_name,
               n.create_time,
               n.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from note n
                 join user u on u.username = n.user_name
        where n.course_id = #{courseId}
          and n.user_name = #{username}
    </select>
    <select id="statisticCountOf7Days" resultType="java.util.Map">
        SELECT
            DATE(update_time) AS note_date, -- 提取日期部分，作为分组依据和返回的日期
            COUNT(*) AS count                     -- 统计每个分组（即每一天）
        FROM
            note
        WHERE
            update_time >= CURDATE() - INTERVAL 7 DAY -- 筛选条件：创建时间大于等于7天前的日期（包含今天）
        GROUP BY
            note_date                       -- 按提取出的日期进行分组
        ORDER BY
            note_date;                      -- 按日期升序排序（可选，让结果更清晰）
    </select>

    <!--插入单个笔记-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into note(content, user_name, course_id, create_time, update_time)
        values (#{content}, #{author.username}, #{courseId}, #{createTime}, #{updateTime})
    </insert>

    <!--更新笔记-->
    <update id="update">
        update note
        set
        <if test="content != null and content != ''">
            content = #{content},
        </if>
        <if test="author != null">
            user_name = #{author.username},
        </if>
        update_time = #{updateTime}
        where id = #{id}
    </update>
    <select id="count" resultType="Integer">
        select count(*) from note
    </select>

    <!--删除笔记-->
    <delete id="delete">
        delete
        from note
        where id = #{id}
    </delete>

</mapper>
