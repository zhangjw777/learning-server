<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.course.dao.CourseDao">

    <resultMap type="com.learning.course.entity.Course" id="CourseMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="averageScore" column="average_score"/>
        <result property="coverPicture" column="cover_picture"/>
        <result property="approved" column="approved"/>
        <result property="categoryId" column="category_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="certificateUrl" column="certificate_url"/>
        <result property="isPremium" column="is_premium"/>
        <result property="pointsReward" column="points_reward"/>
        <result property="pointsPrice" column="points_price"/> <!-- 新增 -->
        <result property="chapterCount" column="chapter_count"/>
        <association property="teacher" javaType="com.learning.course.entity.User">
            <id property="id" column="uid"/>
            <result property="username" column="username"/>
            <result property="fullName" column="full_name"/>
            <result property="profilePicture" column="profile_picture"/>
        </association>
    </resultMap>

    <!--通过ID查询单个-->
    <select id="selectById" resultMap="CourseMap">
        select c.id,
               c.name,
               c.price,
               c.description,
               c.user_name,
               c.average_score,
               c.cover_picture,
               c.approved,
               c.create_time,
               c.update_time,
               c.category_id,
               c.chapter_count,
               c.certificate_url,
               c.is_premium,
               c.points_reward,
               c.points_price, <!-- 新增 -->
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from course c
                 join user u on c.user_name = u.username
        where c.id = #{id}
    </select>

    <!--查询所有-->
    <select id="list" resultMap="CourseMap">
        select c.id,
        c.name,
        c.price,
        c.points_price,
        c.description,
        c.user_name,
        c.average_score,
        c.cover_picture,
        c.approved,
        c.category_id,
        c.chapter_count,
        c.certificate_url,
        c.is_premium,
        c.points_reward,
        c.create_time,
        c.update_time,
        u.id uid,
        u.username,
        u.full_name,
        u.profile_picture
        from course c
        join user u
        on c.user_name = u.username
        <where>
            <if test="approved">
                c.approved = true
            </if>
        </where>
        order by ${orderBy} desc
    </select>

    <!--通过教师用户名分页查询所有课程-->
    <select id="listByTeacherName" resultMap="CourseMap">
        select c.id,
               c.name,
               c.price,
               c.points_price,
               c.description,
               c.user_name,
               c.average_score,
               c.cover_picture,
               c.approved,
               c.category_id,
               c.chapter_count,
               c.certificate_url,
               c.is_premium,
               c.points_reward,
               c.create_time,
               c.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from course c
                 join user u
                      on c.user_name = u.username
        where c.user_name = #{teacherName}
    </select>

    <!--通过学生用户名分页查询所有课程-->
    <select id="listByStudentName" resultMap="CourseMap">
        select c.id,
               c.name,
               c.price,
               c.description,
               c.user_name,
               c.average_score,
               c.cover_picture,
               c.approved,
               c.category_id,
               c.chapter_count,
               c.certificate_url,
               c.is_premium,
               c.points_reward,
               c.create_time,
               c.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from course c
                 join user u
                      on c.user_name = u.username
                 join user_course uc
                      on c.id = uc.course_id
        where uc.user_name = #{studentName}
          and c.approved = true
    </select>

    <!--通过分类ID分页查询所有课程-->
    <select id="listByCategoryId" resultMap="CourseMap">
        select c.id,
               c.name,
               c.price,
               c.points_price,
               c.description,
               c.user_name,
               c.average_score,
               c.cover_picture,
               c.approved,
               c.category_id,
               c.chapter_count,
               c.certificate_url,
               c.is_premium,
               c.points_reward,
               c.create_time,
               c.update_time,
               u.id uid,
               u.username,
               u.full_name,
               u.profile_picture
        from course c
                 join user u
                      on c.user_name = u.username
        where c.approved = true and category_id = #{categoryId}
        order by ${orderBy} desc
    </select>

    <!--通过ID查询分类列表-->
    <select id="listCategoryById" resultMap="com.learning.course.dao.CategoryDao.CategoryMap">
        select c.id, c.name
        from category c
                 join category_course cc on c.id = cc.category_id
        where cc.course_id = #{id}
    </select>

    <!--插入单个-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into course(
            name, price, description, user_name, average_score, 
            cover_picture, certificate_url, approved, category_id,
            is_premium, points_reward, points_price, <!-- 新增 -->
            create_time, update_time)
        values (
            #{name}, #{price}, #{description}, #{teacher.username}, #{averageScore},
            #{coverPicture}, #{certificateUrl}, #{approved}, #{categoryId},
            #{isPremium}, #{pointsReward}, #{pointsPrice}, <!-- 新增 -->
            #{createTime}, #{updateTime})
    </insert>

    <!--更新-->
    <update id="update">
        update course
        set
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="price != null">
            price = #{price},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="teacher != null">
            user_name = #{teacher.username},
        </if>
        <if test="averageScore != null">
            average_score = #{averageScore},
        </if>
        <if test="coverPicture != null and coverPicture != ''">
            cover_picture = #{coverPicture},
        </if>
            <if test="certificateUrl != null and certificateUrl != ''">
            certificate_url = #{certificateUrl},
        </if>
        <if test="approved != null">
            approved = #{approved},
        </if>
        <if test="categoryId!=null">
            category_id = #{categoryId},
        </if>
        <if test="isPremium!=null">
            is_premium = #{isPremium},
        </if>
        <if test="pointsReward != null">
            points_reward = #{pointsReward},
        </if>
        <if test="pointsPrice != null"> <!-- 新增 -->
            points_price = #{pointsPrice},
        </if>
        update_time = #{updateTime}
        where id = #{id}
    </update>
    <update id="incrementChapterCount" parameterType="java.lang.Long">
        update course
        set chapter_count = chapter_count + 1
        where id = #{courseId}
    </update>

    <!--删除-->
    <delete id="delete">
        delete
        from course
        where id = #{id}
    </delete>

    <!--查询用户-课程关系-->
    <select id="selectRegistration" resultType="java.lang.Boolean">
        select count(*) > 0
        from user_course
        where user_name = #{username}
          and course_id = #{courseId}
    </select>
    <select id="statisticCourseOfCategoryCounts" resultType="java.util.Map">
        select category_id,count(*) as count from course group by category_id
    </select>

    <!--插入用户-课程关系-->
    <insert id="insertRegistration">
        insert into user_course(user_name, course_id, current_chapter)
        values (#{username},
                #{courseId},
                (select id from chapter where chapter.course_id = #{courseId} order by id limit 1)
               )
    </insert>

    <!--为课程插入分类-->
    <insert id="insertCategory">
        insert into category_course(course_id, category_id )
        values
        <foreach collection="categories" item="category" separator=",">
            (#{courseId}, #{category.id})
        </foreach>
    </insert>

    <!--删除课程的分类-->
    <delete id="deleteCategory">
        delete
        from category_course
        where course_id = #{courseId}
    </delete>

</mapper>
